trigger:
  tags:
    include:
      - v*

pool:
  vmImage: windows-latest

steps:
#- task: NuGetCommand@2
#  displayName: "Install build deps"
#  inputs:
#    command: 'restore'
#    restoreSolution: '$(Build.Repository.LocalPath)\\cs-windows-firewall-bouncer.sln'
#    feedsToUse: 'select'

- pwsh: |
   nuget restore $(Build.Repository.LocalPath)\\cs-windows-firewall-bouncer.sln
  displayName: "restore build deps"
- task: DotNetCoreCLI@2
  displayName: "Install SignClient"
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install --global SignClient --version 1.3.155'
- task: VSBuild@1
  displayName: "Build bouncer"
  inputs:
    solution: '$(Build.Repository.LocalPath)\\cs-windows-firewall-bouncer.sln'
    vsVersion: '17.0'
    msbuildArgs: '-t:cs-windows-firewall-bouncer:rebuild'
    platform: 'x64'
    configuration: 'Release'

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure subscription 1(8a93ab40-7e99-445e-ad47-0f6a3e2ef546)'
    KeyVaultName: 'CodeSigningSecrets'
    SecretsFilter: 'CodeSigningUser,CodeSigningPassword,CodeSigningConfigB64'
    RunAsPreJob: false
- pwsh: |
    $appconfig = Join-Path -Path $env:Agent.TempDirectory -ChildPath "appconfig.json"; 
    $encodedBytes = [System.Convert]::FromBase64String($env:CodeSigningConfigB64); 
    Set-Content $appconfig -Value $encodedBytes -Encoding Byte;

- pwsh: |
    SignClient.exe Sign  --name "windows-firewall-bouncer.exe" `
    --baseDirectory (Join-Path -Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-bouncer\\bin\\x64\\Release\\net6.0-windows) `
    --input "*.{exe,dll}" --config (Join-Path -Path $env:Agent.TempDirectory -ChildPath "appconfig.json") `
    --user $env:CodeSigningUser --secret '$env:CodeSigningPassword'
  displayName: "Sign bouncer binary"

- task: VSBuild@1
  displayName: "Build installers"
  inputs:
    solution: 'cs-windows-firewall-bouncer.sln'
    vsVersion: '17.0'
    msbuildArgs: '-t:cs-windows-firewall-installer-bundle'
    platform: 'x64'
    configuration: 'Release'

- pwsh: |
   SignClient.exe Sign --name "windows-firewall-bouncer.msi" `
   --baseDirectory (Join-Path -Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-bouncer-setup\\bin\\x64\\Release) `
   --input "*.msi" --config (Join-Path -Path $(Agent.TempDirectory) -ChildPath "appconfig.json") `
   --user $env:CodeSigningUser --secret '$env:CodeSigningPassword'
  displayName: "Sign MSI"

- pwsh: |
   $env:Path += ";C:\Program Files (x86)\WiX Toolset v3.11\bin"
   New-Item -type Directory bundle_sign
   insignia.exe -ib (Join-Path -Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-installer-bundle\\bin\\Release\\cs_windows_firewall_installer_bundle.exe)  -o bundle_sign\\engine.exe
   SignClient.exe Sign --name "windows-firewall-bouncer-bundle-engine.exe" `
   --baseDirectory (Join-Path -Path $env:Build.Repository.LocalPath --ChildPath bundle_sign) --input "*.exe" --config (Join-Path -Path $env:Agent.TempDirectory -ChildPath "appconfig.json") `
   --user $env:CodeSigningUser --secret '$env:CodeSigningPassword'
   insignia.exe -ab bundle_sign\\engine.exe (Join-Path -Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-installer-bundle\\bin\\Release\\cs_windows_firewall_installer_bundle.exe) `
   -o (Join-Path -Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-installer-bundle\\bin\\Release\\cs_windows_firewall_installer_bundle.exe)
   SignClient.exe Sign --name "windows-firewall-bouncer-bundle.exe" `
   --baseDirectory (Join-Path $env:Build.Repository.LocalPath -ChildPath cs-windows-firewall-installer-bundle\\bin\\Release) --input "*.exe" `
   --config (Join-Path -Path $env:Agent.TempDirectory -ChildPath "appconfig.json") `
   --user $env:CodeSigningUser --secret '$env:CodeSigningPassword'
  displayName: "Sign bundle"